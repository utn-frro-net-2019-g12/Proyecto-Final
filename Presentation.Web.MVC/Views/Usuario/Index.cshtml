@model IEnumerable<Presentation.Web.MVC.Models.MvcUsuarioModel>

@{
    ViewBag.Title = "Index";
}

@section styleDataTable {
    @Styles.Render("~/Content/dataTables")
}

@section scriptsDataTable {
    @Scripts.Render("~/bundles/dataTables")
    <script type="text/javascript">
        $(document).ready(function () {
            $('#dataTable').DataTable({ "bFilter": false });
            //  $('#dataTable').DataTable();
        });
    </script>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            console.log(data);
            return data;
        };

        // Initial Validation
        function checkTypes(isPostBack, modal) {
            if (isPostBack == false && modal == "create") {
                // First Time Loaded on _Create
                alumnoType = true; profesorType = false, adminType = false;
                $("#alumnoCheck").prop("checked", true);
                $("#legajoInput").prop("disabled", false);
                $("#profesorCheck").prop("checked", false);
                $("#matriculaInput").prop("disabled", true);
                $("#submitButton").prop("disabled", true);
            } else {
                // Is Alumno?
                if ($("#alumnoCheck").prop("checked") == true) {
                    $("#legajoInput").prop("disabled", false);
                } else {
                    $("#legajoInput").prop("disabled", true);
                }
                // Is Profesor?
                if ($("#profesorCheck").prop("checked") == true) {
                    $("#matriculaInput").prop("disabled", false);
                } else {
                    $("#matriculaInput").prop("disabled", true);
                }
                // Validation: At Least One (Default Alumno)
                if ($("#alumnoCheck").prop("checked") == false && $("#profesorCheck").prop("checked") == false && $("#adminCheck").prop("checked") == false) {
                    $("#alumnoCheck").prop("checked", true);
                    $("#legajoInput").prop("disabled", false);
                }
            }
        }

        // Validations on Changes
        function validateTypes() {
            let chAlu = $("#alumnoCheck");
            let chProf = $("#profesorCheck");
            let chAdm = $("#adminCheck");
            let inLegajo = $("#legajoInput").val();
            let inMatricula = $("#matriculaInput").val();

            let submit = $("#submitButton");
            let valido = true;

            // Todo Desactivado
            if (chAlu.prop("checked") == false && chProf.prop("checked") == false && chAdm.prop("checked") == false) { valido = false; }

            // Alumno con Input Vacío
            if (chAlu.prop("checked") == true && inLegajo == "") { valido = false; }

            // Profesor con Input Vacío
            if (chProf.prop("checked") == true && inMatricula == "") { valido = false; }

            // Alumno Profesor con Input(s) Vacío(s)
            if (chAlu.prop("checked") == true && chProf.prop("checked") == true) {
                if (inLegajo == "" || inMatricula == "") { valido = false; }
            }

            // Validación Final
            valido ? submit.prop("disabled", false) : submit.prop("disabled", true);
        }

        function modalCreate(data, url, isPostBack) {
            $('#modalCreateUserContent').html(data);
            $('#createForm').unbind();
            checkTypes(isPostBack, "create");

            // Si un Checked es true, activar el Input correspondiente y viceversa
            $('#alumnoCheck').bind("click", function () {
                if ($(this).prop("checked") == true) {
                    $("#legajoInput").prop("disabled", false);
                    $("#submitButton").prop("disabled", true);
                } else if ($(this).prop("checked") == false) {
                    $("#legajoInput").val("");
                    $("#legajoInput").prop("disabled", true);
                }
            });
            $('#profesorCheck').bind("click", function () {
                if ($(this).prop("checked") == true) {
                    $("#matriculaInput").prop("disabled", false);
                    $("#submitButton").prop("disabled", true);
                } else if ($(this).prop("checked") == false) {
                    $("#matriculaInput").val("");
                    $("#matriculaInput").prop("disabled", true);
                }
            });

            // Validaciones en Cambios
            $('#alumnoCheck, #profesorCheck, #adminCheck').bind("click", function () { validateTypes(); });
            $("#legajoInput, #matriculaInput").on('change', function () { validateTypes(); });

            $('#createForm').bind("submit", function (event) {
                event.preventDefault();
                $.ajax({
                    type: "POST",
                    url: url,
                    // dataType: "json",
                    // traditional: true,
                    data: $('#createForm').serialize(),
                    success: function (data) {
                        // isPostBack = true
                        data != "OK" ? modalCreate(data, url, true) : window.location.reload();
                    }
                });
            });
        }

        $('#actionCreateUser').on('click', function () {
            let url = '/Usuario/Create';
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    // isPostBack = false
                    modalCreate(data, url, false)
                }
            });
        });

        $("#modalCreateUser").on("hidden.bs.modal", function () {
            $("#modalCreateUserContent").html('<p styles="text - align: center; margin - top: 1rem; font - weight: bold;"> Loading... </p>');
            $("#createForm").unbind();
        });

        /*------------------------------*/

        function modalEdit(data, url, isPostBack) {
            $('#modalEditUserContent').html(data);
            $('#editForm').unbind();
            checkTypes(isPostBack, "edit");
            
            // Si un Checked es true, activar el Input correspondiente y viceversa
            $('#alumnoCheck').bind("click", function () {
                if ($(this).prop("checked") == true) {
                    $("#legajoInput").prop("disabled", false);
                    $("#submitButton").prop("disabled", true);
                } else if ($(this).prop("checked") == false) {
                    $("#legajoInput").val("");
                    $("#legajoInput").prop("disabled", true);
                }
            });
            $('#profesorCheck').bind("click", function () {
                if ($(this).prop("checked") == true) {
                    $("#matriculaInput").prop("disabled", false);
                    $("#submitButton").prop("disabled", true);
                } else if ($(this).prop("checked") == false) {
                    $("#matriculaInput").val("");
                    $("#matriculaInput").prop("disabled", true);
                }
            });

            // Validaciones en Cambios
            $('#alumnoCheck, #profesorCheck, #adminCheck').bind("click", function () { validateTypes(); });
            $("#legajoInput, #matriculaInput").on('change', function () { validateTypes(); });
            
            $('#editForm').bind("submit", function (event) {
                event.preventDefault();
                $.ajax({
                    type: "POST",
                    url: url,
                    data: $('#editForm').serialize(),
                    success: function (data) {
                        // isPostBack = true
                        data != "OK" ? modalEdit(data, url, true) : window.location.reload();
                    }
                });
            });
        }

        $('.actionEditUser').on('click', function () {
            let index = $(this).parent().siblings().first().text().trim();
            let url = `/Usuario/Edit/${index}`;
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    // isPostBack = false
                    modalEdit(data, url, false)
                }
            });
        });

        $("#modalEditUser").on("hidden.bs.modal", function () {
            $("#modalEditUserContent").html('<p styles="text - align: center; margin - top: 1rem; font - weight: bold;"> Loading... </p>');
            $("#editForm").unbind();
        });

        /*------------------------------*/

        var idToDelete;
        var toDeleteName = document.getElementById('toDeleteName');

        $('.actionDeleteUser').on('click', function () {
            idToDelete = $(this).parent().siblings().first().text().trim();
            toDeleteName.innerHTML = $(this).parent().siblings().first().next().text().trim() + " " + $(this).parent().siblings().first().next().next().text().trim();
        });

        $('#deleteConfirmButton').on('click', function () {
            let url = `/Usuario/Delete/${idToDelete}`;
            $.ajax({
                type: "POST",
                url: url,
                success: function (data) { window.location.reload() }
            });
        });

        /*------------------------------*/

        $("#searchButton").on('click', function () {
            let partialDesc = $("#searchText").val();
            if (partialDesc != null && partialDesc != "") {
                let filter = $("#searchFilter").val();
                console.log(filter);
                var url = `/Usuario/Search`;
                switch (filter) {
                    case "usuarios": { url = `/Usuario/Search`; break; }
                    case "profesores": { url = `/Usuario/SearchProfesor`; break; }
                    case "alumnos": { url = `/Usuario/SearchAlumno`; break; }
                    default: { url = `/Usuario/Search`; break; }
                }
                console.log(url);
                $.ajax({
                    type: "POST",
                    data: ({ partialDesc: $("#searchText").val() }),
                    url: url,
                    success: function (data) { window.location.href = url; }
                });
                console.log(partialDesc);
            }
        });
    </script>
}

<!-- Modal Nuevo Usuario -->
<div class="modal fade" id="modalCreateUser" tabindex="-1" role="dialog" aria-labelledby="modalCreateUserTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="modalCreateUserContent">
            <p styles="text-align: center; margin-top: 1rem; font-weight: bold;"> Loading... </p>
        </div>
    </div>
</div>

<!-- Modal Modificar Usuario -->
<div class="modal fade" id="modalEditUser" tabindex="-1" role="dialog" aria-labelledby="modalEditUserTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="modalEditUserContent">
            <p styles="text-align: center; margin-top: 1rem; font-weight: bold;"> Loading... </p>
        </div>
    </div>
</div>

<!-- Modal Eliminar Usuario -->
<div class="modal fade" id="modalDeleteUser" tabindex="-1" role="dialog" aria-labelledby="modalDeleteUserTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="modalDeleteUserContent">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Eliminar Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro que desea eliminar a <span id="toDeleteName" class="badge badge-danger"></span> ? Esta acción no podrá deshacerse.</p>
            </div>
            <div class="modal-footer">
                <button id="deleteConfirmButton" type="button" class="btn btn-danger">Eliminar</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<!-- Index Usuario -->
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Administrar Usuarios</h1>
    <div class="row  mb-3">
        <div class="col col-auto d-flex">
            <button id="actionCreateUser" class="btn btn-primary" type="button" name="button" data-toggle="modal" data-target="#modalCreateUser">Añadir Usuario</button>
        </div>
        <select class="form-control col-3" id="searchFilter">
            <option value="usuarios">Todos los Usuarios</option>
            <option value="profesores">Solo Profesores</option>
            <option value="alumnos">Solo Alumnos</option>
        </select>
        <form class="col">
            <div class="input-group">
                <input type="text" class="form-control bg-light border border-primary p-4" id="searchText" placeholder="Buscar Usuario" aria-label="Search" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button class="btn btn-primary" id="searchButton" type="button">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Surname)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Firstname)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Username)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Legajo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Matricula)
                            </th>
                            <th>Teléfonos</th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsAdmin)
                            </th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Surname)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Firstname)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Username)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Legajo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Matricula)
                            </th>
                            <th>Teléfonos</th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsAdmin)
                            </th>
                            <th>Acciones</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model) {
                        <tr>
                            <td class="d-none">
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Surname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Firstname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Username)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Legajo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Matricula)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phone1)
                                <br />
                                @Html.DisplayFor(modelItem => item.Phone2)
                            </td>
                            <td>
                                @if (item.IsAdmin) {
                                    <i class="d-flex justify-content-center fas fa-check fa-lg text-success"></i>
                                } else {
                                    <i class="d-flex justify-content-center fas fa-times fa-lg text-danger"></i>
                                }
                            </td>
                            <td class="d-flex align-items-center p-0">
                                <button data-toggle="modal" data-target="#modalEditUser" type="button" class="actionEditUser d-flex align-items-center btn btn-warning m-1">
                                    <i class="fas fa-edit fa-xs m-1"></i>
                                    <p class="d-none d-md-block m-0">Editar</p>
                                </button>
                                <button data-toggle="modal" data-target="#modalDeleteUser" type="button" class="actionDeleteUser d-flex align-items-center btn btn-danger m-1">
                                    <i class="fas fa-trash-alt fa-xs m-1"></i>
                                    <p class="d-none d-md-block m-0">Eliminar</p>
                                </button>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
